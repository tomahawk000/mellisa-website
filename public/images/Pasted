### Detailed Build Guide for Melissa McCune's Real Estate Website Using Cursor.sh and Next.js

This guide outlines the steps to build a static real estate website for Melissa McCune using Cursor.sh and Next.js, focusing on lead generation and brand presence. The website will be hosted on Vercel, with features like property search filters, a blog, and a before-and-after gallery for virtual staging.

#### Step 1: Project Setup

1. **Initialize the Project**:
   - Create a new Next.js project using the command `npx create-next-app`.
   - Set up the project structure, including directories for `pages`, `components`, `styles`, and `public` assets.

2. **Install Dependencies**:
   - Install necessary dependencies using npm:
     - `react`
     - `tailwindcss`
     - `axios`
     - `next/router` for page navigation.
   - Configure Tailwind CSS by setting up the `tailwind.config.js` and including Tailwind in the project’s CSS.

3. **Vercel Hosting Configuration**:
   - Link the project repository to Vercel for hosting.
   - Enable continuous deployment from the Git repository to Vercel.

#### Step 2: Design and Layout

1. **Generate Static Pages**:
   - **Home Page**:
     - Create a hero section with a call-to-action (CTA), featured property listings, and a brief introduction.
   - **About Page**:
     - Design sections for Melissa’s background, experience, and unique approach.
   - **Property Listings Page**:
     - Develop a grid layout with search filters: location, price range, property type, and number of bedrooms.
   - **Blog Page**:
     - Create a list layout for categorized blog posts with a search function.
   - **Testimonials Page**:
     - Implement a section to display static written testimonials.
   - **Contact Page**:
     - Include a static contact form with fields for name, email, phone number, and message.
   - **Events Page**:
     - Design a static layout for listing upcoming events with options for users to RSVP.

2. **Responsive Design**:
   - Ensure all pages are fully responsive, optimized for mobile, tablet, and desktop views using Tailwind CSS.

#### Step 3: Develop Website Features

1. **Property Listings Page**:
   - Create static data files (`.json` or `.js`) for property listings with fields like property name, location, price, number of bedrooms, and images.
   - Implement static search and filter functionality using JavaScript and Next.js dynamic routing.
   - Develop a before-and-after gallery for virtual staging using an interactive slider.

2. **Blog Section**:
   - Set up static Markdown files or JSON data for blog content.
   - Implement a simple search function for blog posts.

3. **Testimonials Page**:
   - Create a static section to display written testimonials from past clients.

4. **Contact Page**:
   - Develop a static contact form with validation, submitting data via an API endpoint to an email service like Formspree or directly to an email address.

5. **Events Page**:
   - Develop a static template for listing upcoming events, allowing users to RSVP through external links or integrations.

#### Step 4: API and Analytics Integration

1. **Google Analytics and Facebook Pixel**:
   - Integrate Google Analytics and Facebook Pixel by adding the tracking codes in `_app.js` or `_document.js`.

2. **API Integrations**:
   - Set up API requests using `axios` for any required external data, ensuring that data fetching is done during the build time (SSG).

#### Step 5: Testing and Deployment

1. **Functional Testing**:
   - Run automated tests on static components and pages using Jest and React Testing Library.
   - Ensure the site functions correctly across different browsers and devices.

2. **Performance Optimization**:
   - Optimize images using `next/image` for automatic image optimization.
   - Minify CSS/JS and enable caching through Next.js configurations.

3. **Deployment**:
   - Deploy the static site to Vercel using the Next.js export feature for static sites.
   - Verify that the website is live, responsive, and performing as expected.

This guide should be followed to build and deploy Melissa McCune’s static real estate website using Cursor.sh and Next.js, ensuring a high-performance, user-friendly site hosted on Vercel.